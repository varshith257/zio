"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[34104],{15680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>g});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(n),u=r,g=c["".concat(p,".").concat(u)]||c[u]||d[u]||o;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},67987:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var a=n(58168),r=(n(96540),n(15680));const o={id:"template",title:"Template"},i=void 0,l={unversionedId:"zio-http/reference/body/template",id:"zio-http/reference/body/template",title:"Template",description:"The package zio.http.template._ contains lightweight helpers for generating statically typed, safe html similiar in spirit to scalatags.",source:"@site/docs/zio-http/reference/body/template.md",sourceDirName:"zio-http/reference/body",slug:"/zio-http/reference/body/template",permalink:"/zio-http/reference/body/template",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/reference/body/template.md",tags:[],version:"current",frontMatter:{id:"template",title:"Template"},sidebar:"ecosystem-sidebar",previous:{title:"BinaryCodecs",permalink:"/zio-http/reference/body/binary_codecs"},next:{title:"Endpoint",permalink:"/zio-http/reference/endpoint"}},p={},m=[{value:"Html and DOM",id:"html-and-dom",level:2},{value:"Html from string",id:"html-from-string",level:3},{value:"Html from constructors",id:"html-from-constructors",level:3},{value:"Html from Tag API",id:"html-from-tag-api",level:3},{value:"Html composition",id:"html-composition",level:3},{value:"Html response",id:"html-response",level:2}],s={toc:m},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"The package ",(0,r.yg)("inlineCode",{parentName:"p"},"zio.http.template._")," contains lightweight helpers for generating statically typed, safe html similiar in spirit to ",(0,r.yg)("inlineCode",{parentName:"p"},"scalatags"),". "),(0,r.yg)("h2",{id:"html-and-dom"},"Html and DOM"),(0,r.yg)("h3",{id:"html-from-string"},"Html from string"),(0,r.yg)("p",null,"One possible way is to create an instance of ",(0,r.yg)("inlineCode",{parentName:"p"},"Html")," directly from a ",(0,r.yg)("inlineCode",{parentName:"p"},"String")," value, with the obvious drawback of not having checks\nfrom the compiler:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'import zio.http.template._\n\nval divHtml1: Html = Html.fromString("""<div class="container1 container2"><a href="http://zio.dev">ZIO Homepage</a></div>""")\n')),(0,r.yg)("h3",{id:"html-from-constructors"},"Html from constructors"),(0,r.yg)("p",null,"In order to improve on type safety one could use ",(0,r.yg)("inlineCode",{parentName:"p"},"Html")," with ",(0,r.yg)("inlineCode",{parentName:"p"},"Dom")," constructor functions, with the drawback that the resulting\ncode is much more verbose:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'import zio.http.template._\n\nval divHtml2: Html = Html.fromDomElement(\n  Dom.element(\n    "div", \n    Dom.attr("class", "container1 container2"), \n    Dom.element(\n      "a", \n      Dom.attr("href", "http://zio.dev"), \n      Dom.text("ZIO Homepage")\n    )\n  )\n)\n')),(0,r.yg)("p",null,"Please note that both values ",(0,r.yg)("inlineCode",{parentName:"p"},"divHtml1")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"divHtml2")," produce identical html output."),(0,r.yg)("h3",{id:"html-from-tag-api"},"Html from Tag API"),(0,r.yg)("p",null,"Practically one would very likely not use one of the above mentioned versions but instead use the ",(0,r.yg)("inlineCode",{parentName:"p"},"Tag API"),". That API lets one use not only html\nelements like ",(0,r.yg)("inlineCode",{parentName:"p"},"div")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"a")," but also html attributes like ",(0,r.yg)("inlineCode",{parentName:"p"},"hrefAttr")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"styleAttr")," as scala functions. By convention values of html attributes\nare suffixed ",(0,r.yg)("inlineCode",{parentName:"p"},"attr")," to easily distinguish those from html elements: "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},'import zio.http.template._\n\nval divHtml3: Html = div(\n  classAttr := "container1 container2",\n  a(hrefAttr := "http://zio.dev", "ZIO Homepage")\n)\n')),(0,r.yg)("p",null,"Also ",(0,r.yg)("inlineCode",{parentName:"p"},"divHtml3")," produces identical html output as ",(0,r.yg)("inlineCode",{parentName:"p"},"divHtml1")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"divHtml2"),". "),(0,r.yg)("p",null,"Html elements like ",(0,r.yg)("inlineCode",{parentName:"p"},"div")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"a")," are represented as values of ",(0,r.yg)("inlineCode",{parentName:"p"},"PartialElement")," which have an ",(0,r.yg)("inlineCode",{parentName:"p"},"apply")," method for nesting html elements,\nhtml attributes and text values. Html attributes are represented as values of ",(0,r.yg)("inlineCode",{parentName:"p"},"PartialAttribute")," which provides an operator ",(0,r.yg)("inlineCode",{parentName:"p"},":="),' for "assigning"\nattribute values. Besides ',(0,r.yg)("inlineCode",{parentName:"p"},":=")," attributes also have an ",(0,r.yg)("inlineCode",{parentName:"p"},"apply")," method that provides an alternative syntax e.g. instead\nof ",(0,r.yg)("inlineCode",{parentName:"p"},'a(hrefAttr := "http://zio.dev", "ZIO Homepage")')," one can use ",(0,r.yg)("inlineCode",{parentName:"p"},'a(hrefAttr("http://zio.dev"), "ZIO Homepage")'),". "),(0,r.yg)("h3",{id:"html-composition"},"Html composition"),(0,r.yg)("p",null,"One can compose values of ",(0,r.yg)("inlineCode",{parentName:"p"},"Html")," sequentially using the operator ",(0,r.yg)("inlineCode",{parentName:"p"},"++")," to produce a larger ",(0,r.yg)("inlineCode",{parentName:"p"},"Html"),": "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala"},"import zio.http.template._\n\nval fullHtml: Html = divHtml1 ++ divHtml2 ++ divHtml3\n")),(0,r.yg)("h2",{id:"html-response"},"Html response"),(0,r.yg)("p",null,"One can create a successful http response in routing code from a given value of ",(0,r.yg)("inlineCode",{parentName:"p"},"Html")," with ",(0,r.yg)("inlineCode",{parentName:"p"},"Response.html"),"."))}d.isMDXComponent=!0}}]);