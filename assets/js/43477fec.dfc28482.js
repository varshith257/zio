"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[68248],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(n),d=a,f=l["".concat(c,".").concat(d)]||l[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},78271:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(58168),a=(n(96540),n(15680));const o={id:"preventing-duplicates",title:"Preventing duplicates"},i=void 0,s={unversionedId:"zio-kafka/preventing-duplicates",id:"zio-kafka/preventing-duplicates",title:"Preventing duplicates",description:"In zio-kafka processing of records runs asynchronously with partition management. This brings substantial performance",source:"@site/docs/zio-kafka/preventing-duplicates.md",sourceDirName:"zio-kafka",slug:"/zio-kafka/preventing-duplicates",permalink:"/zio-kafka/preventing-duplicates",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-kafka/preventing-duplicates.md",tags:[],version:"current",frontMatter:{id:"preventing-duplicates",title:"Preventing duplicates"},sidebar:"ecosystem-sidebar",previous:{title:"Tuning the consumer",permalink:"/zio-kafka/consumer-tuning"},next:{title:"Sharing a Consumer between multiple streams",permalink:"/zio-kafka/sharing-consumer"}},c={},p=[],u={toc:p},l="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(l,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"In zio-kafka processing of records runs asynchronously with partition management. This brings substantial performance\nadvantages but causes some records to be consumed and processed ",(0,a.yg)("em",{parentName:"p"},"twice")," when a rebalance occurs. To prevent this,\nsince version 2.7.1 zio-kafka supports a new mode in which we prevent duplicates due to rebalances. You can enable it\nas follows:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'import zio.*\nimport zio.kafka.consumer.ConsumerSettings\n\nval consumerSettings: ConsumerSettings =\n  ConsumerSettings(List("localhost:9092"))\n    .withGroupId("group")\n    .withRebalanceSafeCommits(true)       // enable rebalance-safe-commits mode\n    .withMaxRebalanceDuration(30.seconds) // defaults to 3 minutes\n')),(0,a.yg)("p",null,"With rebalance-safe-commits mode enabled, rebalances are held up for up to max-rebalance-duration to wait for pending\ncommits to be completed. Once pending commits are completed, it is safe for another consumer in the group to take over\na partition."),(0,a.yg)("p",null,"For this to work correctly, your program must process a chunk of records within max-rebalance-duration. The clock\nstarts the moment the chunk is pushed into the stream and ends when the commits for these records complete."),(0,a.yg)("p",null,"For more information see the scaladocs in ",(0,a.yg)("inlineCode",{parentName:"p"},"ConsumerSettings"),", read the description of\n",(0,a.yg)("a",{parentName:"p",href:"https://github.com/zio/zio-kafka/pull/1098"},"pull request #1098")," that introduced this feature, or watch the presentation\n",(0,a.yg)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=MJoRwEyyVxM"},"Making ZIO-Kafka Safer And Faster"),". The relevant part starts at 10:24."))}m.isMDXComponent=!0}}]);