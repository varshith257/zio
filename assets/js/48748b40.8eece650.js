"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[9e4],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>d});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),y=a,d=p["".concat(s,".").concat(y)]||p[y]||m[y]||o;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=y;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},54643:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(58168),a=(t(96540),t(15680));const o={id:"zio-pulsar",title:"ZIO Pulsar"},i=void 0,l={unversionedId:"ecosystem/community/zio-pulsar",id:"ecosystem/community/zio-pulsar",title:"ZIO Pulsar",description:"ZIO Pulsar is the Apache Pulsar client for Scala with ZIO and ZIO Streams integration.",source:"@site/docs/ecosystem/community/zio-pulsar.md",sourceDirName:"ecosystem/community",slug:"/ecosystem/community/zio-pulsar",permalink:"/ecosystem/community/zio-pulsar",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/zio-pulsar.md",tags:[],version:"current",frontMatter:{id:"zio-pulsar",title:"ZIO Pulsar"},sidebar:"ecosystem-sidebar",previous:{title:"ZIO NebulaGraph",permalink:"/ecosystem/community/zio-nebula"},next:{title:"ZIO Saga",permalink:"/ecosystem/community/zio-saga"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2},{value:"Resources",id:"resources",level:2}],u={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/apache/pulsar"},"ZIO Pulsar")," is the ",(0,a.yg)("em",{parentName:"p"},"Apache Pulsar")," client for Scala with ZIO and ZIO Streams integration."),(0,a.yg)("h2",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"ZIO Pulsar is a purely functional Scala wrapper over the official Pulsar client. Some key features of this library:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Type-safe")," \u2014 Utilizes Scala type system to reduce runtime exceptions present in the official Java client."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Streaming-enabled")," \u2014 Naturally integrates with ZIO Streams."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"ZIO integrated")," \u2014 Uses common ZIO primitives like ZIO effect and ",(0,a.yg)("inlineCode",{parentName:"li"},"ZManaged")," to reduce the boilerplate and increase expressiveness.")),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)("p",null,"In order to use this library, we need to add the following line in our ",(0,a.yg)("inlineCode",{parentName:"p"},"build.sbt")," file for ",(0,a.yg)("em",{parentName:"p"},"Scala 3"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies += "com.github.jczuchnowski" %% "zio-pulsar" % "0.1"\n')),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,"First of all we need to create an instance of ",(0,a.yg)("em",{parentName:"p"},"Apache Pulsar")," and run that:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"docker run -it \\\n  -p 6650:6650 \\\n  -p 8080:8080 \\\n  --mount source=pulsardata,target=/pulsar/data \\\n  --mount source=pulsarconf,target=/pulsar/conf \\\n  --network pulsar \\\n  apachepulsar/pulsar:2.7.0 \\\n  bin/pulsar standalone\n")),(0,a.yg)("p",null,"Now we can run the following example:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'import org.apache.pulsar.client.api.{PulsarClientException, Schema}\nimport zio._\nimport zio.blocking._\nimport zio.clock._\nimport zio.console._\nimport zio.pulsar._\nimport zio.stream._\n\nimport java.nio.charset.StandardCharsets\n\nobject StreamingExample extends zio.App {\n  val topic = "my-topic"\n\n  val producer: ZManaged[Has[PulsarClient], PulsarClientException, Unit] =\n    for {\n      sink <- Producer.make(topic, Schema.STRING).map(_.asSink)\n      _ <- Stream.fromIterable(0 to 100).map(i => s"Message $i").run(sink).toManaged_\n    } yield ()\n\n  val consumer: ZManaged[Has[PulsarClient] with Blocking with Console, PulsarClientException, Unit] =\n    for {\n      builder <- ConsumerBuilder.make(Schema.STRING).toManaged_\n      consumer <- builder\n        .subscription(Subscription("my-subscription", SubscriptionType.Exclusive))\n        .topic(topic)\n        .build\n      _ <- consumer.receiveStream.take(10).foreach { e =>\n        consumer.acknowledge(e.getMessageId) *>\n          putStrLn(new String(e.getData, StandardCharsets.UTF_8)).orDie\n      }.toManaged_\n    } yield ()\n\n  val myApp =\n    for {\n      f <- consumer.fork\n      _ <- producer\n      _ <- f.join.toManaged_\n    } yield ()\n\n  def run(args: List[String]): URIO[ZEnv, ExitCode] =\n    myApp\n      .provideCustom(\n        (Console.live ++ Clock.live) >+>\n          PulsarClient.live("localhost", 6650)\n      ).useNow.exitCode\n}\n')),(0,a.yg)("h2",{id:"resources"},"Resources"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=tpwydDqQBmk"},"ZIO World - ZIO PULSAR")," by Jakub Czuchnowski (March 2020) \u2014 A new library that offers a native, first-class ZIO experience for Pulsar, the Kafka competitor gaining traction for some use cases.")))}m.isMDXComponent=!0}}]);