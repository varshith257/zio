"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[68879],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>d});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),y=a,d=m["".concat(l,".").concat(y)]||m[y]||u[y]||o;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2748:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(58168),a=(n(96540),n(15680));const o={id:"zio-test-akka-http",title:"ZIO Test Akka HTTP"},i=void 0,s={unversionedId:"ecosystem/community/zio-test-akka-http",id:"ecosystem/community/zio-test-akka-http",title:"ZIO Test Akka HTTP",description:"ZIO Test Akka HTTP is an Akka-HTTP Route TestKit for zio-test.",source:"@site/docs/ecosystem/community/zio-test-akka-http.md",sourceDirName:"ecosystem/community",slug:"/ecosystem/community/zio-test-akka-http",permalink:"/ecosystem/community/zio-test-akka-http",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/zio-test-akka-http.md",tags:[],version:"current",frontMatter:{id:"zio-test-akka-http",title:"ZIO Test Akka HTTP"},sidebar:"ecosystem-sidebar",previous:{title:"ZIO Temporal",permalink:"/ecosystem/community/zio-temporal"},next:{title:"ZIO Compatible Libraries",permalink:"/ecosystem/compatible"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(m,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/senia-psm/zio-test-akka-http"},"ZIO Test Akka HTTP")," is an Akka-HTTP Route TestKit for zio-test."),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)("p",null,"In order to use this library, we need to add the following line in our ",(0,a.yg)("inlineCode",{parentName:"p"},"build.sbt")," file:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies += "info.senia" %% "zio-test-akka-http" % "2.0.0-RC5"\n')),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,"An example of writing Akka HTTP Route test spec:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'import akka.http.scaladsl.model.HttpResponse\nimport akka.http.scaladsl.server.Directives.complete\nimport zio.test.Assertion._\nimport zio.test._\nimport zio.test.akkahttp.AkkaZIOSpecDefault\n\nobject MySpec extends AkkaZIOSpecDefault {\n  def spec =\n    suite("MySpec")(\n      test("my test") {\n        assertZIO(Get() ~> complete(HttpResponse()))(\n          handled(\n            response(equalTo(HttpResponse()))\n          )\n        )\n      }\n    )\n}\n')))}u.isMDXComponent=!0}}]);