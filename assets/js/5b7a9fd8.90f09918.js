"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[81295],{15680:(e,n,r)=>{r.d(n,{xA:()=>u,yg:()=>f});var t=r(96540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(r),g=a,f=l["".concat(c,".").concat(g)]||l[g]||m[g]||o;return r?t.createElement(f,s(s({ref:n},u),{},{components:r})):t.createElement(f,s({ref:n},u))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=g;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[l]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},71752:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var t=r(58168),a=(r(96540),r(15680));const o={id:"exposing-the-cause-in-the-success-channel",title:"Exposing the Cause in The Success Channel"},s=void 0,i={unversionedId:"reference/error-management/operations/exposing-the-cause-in-the-success-channel",id:"reference/error-management/operations/exposing-the-cause-in-the-success-channel",title:"Exposing the Cause in The Success Channel",description:"Using the ZIO#cause operation we can expose the cause, and then by using ZIO#uncause we can reverse this operation:",source:"@site/docs/reference/error-management/operations/exposing-the-cause-in-the-succcess-channel.md",sourceDirName:"reference/error-management/operations",slug:"/reference/error-management/operations/exposing-the-cause-in-the-success-channel",permalink:"/reference/error-management/operations/exposing-the-cause-in-the-success-channel",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/reference/error-management/operations/exposing-the-cause-in-the-succcess-channel.md",tags:[],version:"current",frontMatter:{id:"exposing-the-cause-in-the-success-channel",title:"Exposing the Cause in The Success Channel"},sidebar:"reference-sidebar",previous:{title:"Exposing Errors in The Success Channel",permalink:"/reference/error-management/operations/exposing-errors-in-the-success-channel"},next:{title:"Converting Defects to Failures",permalink:"/reference/error-management/operations/converting-defects-to-failures"}},c={},p=[],u={toc:p},l="wrapper";function m(e){let{components:n,...r}=e;return(0,a.yg)(l,(0,t.A)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Using the ",(0,a.yg)("inlineCode",{parentName:"p"},"ZIO#cause")," operation we can expose the cause, and then by using ",(0,a.yg)("inlineCode",{parentName:"p"},"ZIO#uncause")," we can reverse this operation:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},"trait ZIO[-R, +E, +A] {\n  def cause: URIO[R, Cause[E]]\n  def uncause[E1 >: E](implicit ev: A IsSubtypeOfOutput Cause[E1]): ZIO[R, E1, Unit]\n}\n")),(0,a.yg)("p",null,"In the following example, we expose and then untrace the underlying cause:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-scala"},'import zio._\n\nobject MainApp extends ZIOAppDefault {\n  val f1: ZIO[Any, String, Int] =\n    ZIO.fail("Oh uh!").as(1)\n\n  val f2: ZIO[Any, String, Int] =\n    ZIO.fail("Oh error!").as(2)\n\n  val myApp: ZIO[Any, String, (Int, Int)] = f1 zipPar f2\n\n  def run = myApp.cause.map(_.untraced).debug\n}\n')),(0,a.yg)("p",null,"Sometimes the ",(0,a.yg)("a",{parentName:"p",href:"/reference/error-management/operations/map-operations#ziomaperrorziomaperrorcause"},(0,a.yg)("inlineCode",{parentName:"a"},"ZIO#mapErrorCause"))," operator is a better choice when we just want to map the underlying cause without exposing the cause."))}m.isMDXComponent=!0}}]);