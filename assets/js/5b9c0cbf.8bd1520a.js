"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[31089],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66895:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(58168),o=(n(96540),n(15680));const i={id:"endpoint",title:"Endpoint Examples",sidebar_label:"Endpoint"},a=void 0,p={unversionedId:"zio-http/examples/endpoint",id:"zio-http/examples/endpoint",title:"Endpoint Examples",description:"",source:"@site/docs/zio-http/examples/endpoint.md",sourceDirName:"zio-http/examples",slug:"/zio-http/examples/endpoint",permalink:"/zio-http/examples/endpoint",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/endpoint.md",tags:[],version:"current",frontMatter:{id:"endpoint",title:"Endpoint Examples",sidebar_label:"Endpoint"},sidebar:"ecosystem-sidebar",previous:{title:"Streaming",permalink:"/zio-http/examples/streaming"},next:{title:"Middleware CORS Handling",permalink:"/zio-http/examples/middleware-cors-handling"}},s={},l=[],c={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-scala",metastring:'title="zio-http-example/src/main/scala/example/EndpointExamples.scala"',title:'"zio-http-example/src/main/scala/example/EndpointExamples.scala"'},'package example\n\nimport zio._\n\nimport zio.http._\nimport zio.http.codec.PathCodec.path\nimport zio.http.codec._\nimport zio.http.endpoint.AuthType.None\nimport zio.http.endpoint._\nimport zio.http.endpoint.openapi.{OpenAPIGen, SwaggerUI}\n\nobject EndpointExamples extends ZIOAppDefault {\n\n  // MiddlewareSpec can be added at the service level as well\n  val getUser =\n    Endpoint(Method.GET / "users" / int("userId")).out[Int]\n\n  val getUserRoute =\n    getUser.implement { id => ZIO.succeed(id) }\n\n  val getUserPosts =\n    Endpoint(Method.GET / "users" / int("userId") / "posts" / int("postId"))\n      .query(HttpCodec.query[String]("name"))\n      .out[List[String]]\n\n  val getUserPostsRoute =\n    getUserPosts.implement { case (id1: Int, id2: Int, query: String) =>\n      ZIO.succeed(List(s"API2 RESULT parsed: users/$id1/posts/$id2?name=$query"))\n    }\n\n  val openAPI = OpenAPIGen.fromEndpoints(title = "Endpoint Example", version = "1.0", getUser, getUserPosts)\n\n  val routes = Routes(getUserRoute, getUserPostsRoute) ++ SwaggerUI.routes("docs" / "openapi", openAPI)\n\n  val app = routes // (auth.implement(_ => ZIO.unit)(_ => ZIO.unit))\n\n  val request = Request.get(url = URL.decode("/users/1").toOption.get)\n\n  val run = Server.serve(app).provide(Server.default)\n\n  object ClientExample {\n    def example(client: Client) = {\n      val locator =\n        EndpointLocator.fromURL(URL.decode("http://localhost:8080").toOption.get)\n\n      val executor: EndpointExecutor[Any, Unit] =\n        EndpointExecutor(client, locator)\n\n      val x1: Invocation[Int, Int, ZNothing, Int, None] = getUser(42)\n      val x2                                            = getUserPosts(42, 200, "adam")\n\n      val result1: ZIO[Scope, Nothing, Int]          = executor(x1)\n      val result2: ZIO[Scope, Nothing, List[String]] = executor(x2)\n\n      result1.zip(result2).debug\n    }\n  }\n}\n')))}u.isMDXComponent=!0}}]);