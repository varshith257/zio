"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[69442],{15680:(e,n,o)=>{o.d(n,{xA:()=>s,yg:()=>m});var a=o(96540);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,a)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function g(e,n){if(null==e)return{};var o,a,t=function(e,n){if(null==e)return{};var o,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var i=a.createContext({}),p=function(e){var n=a.useContext(i),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},s=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var o=e.components,t=e.mdxType,r=e.originalType,i=e.parentName,s=g(e,["components","mdxType","originalType","parentName"]),c=p(o),u=t,m=c["".concat(i,".").concat(u)]||c[u]||d[u]||r;return o?a.createElement(m,l(l({ref:n},s),{},{components:o})):a.createElement(m,l({ref:n},s))}));function m(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=o.length,l=new Array(r);l[0]=u;var g={};for(var i in n)hasOwnProperty.call(n,i)&&(g[i]=n[i]);g.originalType=e,g[c]="string"==typeof e?e:t,l[1]=g;for(var p=2;p<r;p++)l[p]=o[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},81585:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>g,toc:()=>p});var a=o(58168),t=(o(96540),o(15680));const r={id:"jpl",title:"Java Platform/System Logger"},l=void 0,g={unversionedId:"zio-logging/jpl",id:"zio-logging/jpl",title:"Java Platform/System Logger",description:"Java Platform/System Logger is logging API which was introduced in Java 9.",source:"@site/docs/zio-logging/jpl.md",sourceDirName:"zio-logging",slug:"/zio-logging/jpl",permalink:"/zio-logging/jpl",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-logging/jpl.md",tags:[],version:"current",frontMatter:{id:"jpl",title:"Java Platform/System Logger"},sidebar:"ecosystem-sidebar",previous:{title:"Reconfigurable Logger",permalink:"/zio-logging/reconfigurable-logger"},next:{title:"java.util.logging bridge",permalink:"/zio-logging/jul-bridge"}},i={},p=[{value:"Examples",id:"examples",level:2},{value:"Java Platform/System logger name and annotations",id:"java-platformsystem-logger-name-and-annotations",level:3},{value:"Feature changes",id:"feature-changes",level:2},{value:"Version 2.2.0",id:"version-220",level:3}],s={toc:p},c="wrapper";function d(e){let{components:n,...o}=e;return(0,t.yg)(c,(0,a.A)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://openjdk.org/jeps/264"},(0,t.yg)("inlineCode",{parentName:"a"},"Java Platform/System Logger"))," is logging API which was introduced in Java 9."),(0,t.yg)("p",null,"In order to use this logging backend, we need to add the following line in our build.sbt file:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies += "dev.zio" %% "zio-logging-jpl" % "2.3.2"\n')),(0,t.yg)("p",null,"Logger layer:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},"import zio.logging.backend.JPL\n\nval logger = Runtime.removeDefaultLoggers >>> JPL.jpl\n")),(0,t.yg)("p",null,"Default ",(0,t.yg)("inlineCode",{parentName:"p"},"JPL")," logger setup:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"logger name (by default)  is extracted from ",(0,t.yg)("inlineCode",{parentName:"li"},"zio.Trace"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"for example, trace ",(0,t.yg)("inlineCode",{parentName:"li"},"zio.logging.example.JplSimpleApp.run(JplSimpleApp.scala:17)")," will have ",(0,t.yg)("inlineCode",{parentName:"li"},"zio.logging.example.JplSimpleApp")," as logger name"),(0,t.yg)("li",{parentName:"ul"},"NOTE: custom logger name may be set by ",(0,t.yg)("inlineCode",{parentName:"li"},"zio.logging.loggerName")," aspect"))),(0,t.yg)("li",{parentName:"ul"},"all annotations (logger name annotation is excluded) are placed at the beginning of log message"),(0,t.yg)("li",{parentName:"ul"},"cause is logged as throwable")),(0,t.yg)("p",null,"See also ",(0,t.yg)("a",{parentName:"p",href:"/zio-logging/formatting-log-records#logformat-and-logappender"},"LogFormat and LogAppender")),(0,t.yg)("p",null,"Custom logger name set by aspect:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'ZIO.logInfo("Starting user operation") @@ zio.logging.loggerName("zio.logging.example.UserOperation")\n')),(0,t.yg)("h2",{id:"examples"},"Examples"),(0,t.yg)("p",null,"You can find the source code ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/zio/zio-logging/tree/master/examples"},"here")),(0,t.yg)("h3",{id:"java-platformsystem-logger-name-and-annotations"},"Java Platform/System logger name and annotations"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'package zio.logging.example\n\nimport zio.logging.LogAnnotation\nimport zio.logging.backend.JPL\nimport zio.{ ExitCode, Runtime, Scope, ZIO, ZIOAppDefault, _ }\n\nimport java.util.UUID\n\nobject JplSimpleApp extends ZIOAppDefault {\n\n  override val bootstrap: ZLayer[ZIOAppArgs, Any, Any] = Runtime.removeDefaultLoggers >>> JPL.jpl\n\n  private val users = List.fill(2)(UUID.randomUUID())\n\n  override def run: ZIO[Scope, Any, ExitCode] =\n    for {\n      _       <- ZIO.logInfo("Start")\n      traceId <- ZIO.succeed(UUID.randomUUID())\n      _       <- ZIO.foreachPar(users) { uId =>\n        {\n          ZIO.logInfo("Starting user operation") *>\n            ZIO.sleep(500.millis) *>\n            ZIO.logInfo("Stopping user operation")\n        } @@ ZIOAspect.annotated("user", uId.toString)\n      } @@ LogAnnotation.TraceId(traceId) @@ zio.logging.loggerName("zio.logging.example.UserOperation")\n      _       <- ZIO.logInfo("Done")\n    } yield ExitCode.success\n\n}\n')),(0,t.yg)("p",null,"Expected Console Output:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"Oct 28, 2022 1:47:01 PM zio.logging.backend.JPL$$anon$1 $anonfun$closeLogEntry$1\nINFO: Start\nOct 28, 2022 1:47:01 PM zio.logging.backend.JPL$$anon$1 $anonfun$closeLogEntry$1\nINFO: user=59c114fd-676d-4df9-a5a0-b8e132468fbf trace_id=7d3e3b84-dd3b-44ff-915a-04fb2d135e28 Starting user operation\nOct 28, 2022 1:47:01 PM zio.logging.backend.JPL$$anon$1 $anonfun$closeLogEntry$1\nINFO: user=e1ebf0cc-2f61-484f-afcd-de7e20ec7829 trace_id=7d3e3b84-dd3b-44ff-915a-04fb2d135e28 Starting user operation\nOct 28, 2022 1:47:02 PM zio.logging.backend.JPL$$anon$1 $anonfun$closeLogEntry$1\nINFO: user=e1ebf0cc-2f61-484f-afcd-de7e20ec7829 trace_id=7d3e3b84-dd3b-44ff-915a-04fb2d135e28 Stopping user operation\nOct 28, 2022 1:47:02 PM zio.logging.backend.JPL$$anon$1 $anonfun$closeLogEntry$1\nINFO: user=59c114fd-676d-4df9-a5a0-b8e132468fbf trace_id=7d3e3b84-dd3b-44ff-915a-04fb2d135e28 Stopping user operation\nOct 28, 2022 1:47:02 PM zio.logging.backend.JPL$$anon$1 $anonfun$closeLogEntry$1\nINFO: Done\n")),(0,t.yg)("h2",{id:"feature-changes"},"Feature changes"),(0,t.yg)("h3",{id:"version-220"},"Version 2.2.0"),(0,t.yg)("p",null,"Deprecated log annotation with key ",(0,t.yg)("inlineCode",{parentName:"p"},"jpl_logger_name")," (",(0,t.yg)("inlineCode",{parentName:"p"},"JPL.loggerNameAnnotationKey"),") removed,\nonly common log annotation with key ",(0,t.yg)("inlineCode",{parentName:"p"},"logger_name")," (",(0,t.yg)("inlineCode",{parentName:"p"},"zio.logging.loggerNameAnnotationKey"),") for logger name is supported now."))}d.isMDXComponent=!0}}]);