"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[51056],{15680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>g});var n=t(96540);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),d=i,g=c["".concat(l,".").concat(d)]||c[d]||m[d]||a;return t?n.createElement(g,o(o({ref:r},u),{},{components:t})):n.createElement(g,o({ref:r},u))}));function g(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},78116:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=t(58168),i=(t(96540),t(15680));const a={id:"with-reactive-streams",title:"How to Interop with Reactive Streams?"},o=void 0,s={unversionedId:"guides/interop/with-reactive-streams",id:"version-1.0.18/guides/interop/with-reactive-streams",title:"How to Interop with Reactive Streams?",description:"Checkout the interop-reactive-streams module for inter-operation support.",source:"@site/versioned_docs/version-1.0.18/guides/interop/with-reactive-streams.md",sourceDirName:"guides/interop",slug:"/guides/interop/with-reactive-streams",permalink:"/1.0.18/guides/interop/with-reactive-streams",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/guides/interop/with-reactive-streams.md",tags:[],version:"1.0.18",frontMatter:{id:"with-reactive-streams",title:"How to Interop with Reactive Streams?"},sidebar:"overview_sidebar",previous:{title:"How to Interop with Scalaz 7.x?",permalink:"/1.0.18/guides/interop/with-scalaz-7x"},next:{title:"How to Interop with Twitter?",permalink:"/1.0.18/guides/interop/with-twitter"}},l={},p=[{value:"Reactive Streams <code>Producer</code> and <code>Subscriber</code>",id:"reactive-streams-producer-and-subscriber",level:2},{value:"Examples",id:"examples",level:2},{value:"Publisher to Stream",id:"publisher-to-stream",level:3},{value:"Subscriber to Sink",id:"subscriber-to-sink",level:3},{value:"Stream to Publisher",id:"stream-to-publisher",level:3},{value:"Sink to Subscriber",id:"sink-to-subscriber",level:3}],u={toc:p},c="wrapper";function m(e){let{components:r,...t}=e;return(0,i.yg)(c,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Checkout the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/zio/interop-reactive-streams"},(0,i.yg)("inlineCode",{parentName:"a"},"interop-reactive-streams"))," module for inter-operation support."),(0,i.yg)("h2",{id:"reactive-streams-producer-and-subscriber"},"Reactive Streams ",(0,i.yg)("inlineCode",{parentName:"h2"},"Producer")," and ",(0,i.yg)("inlineCode",{parentName:"h2"},"Subscriber")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"ZIO")," integrates with ",(0,i.yg)("a",{parentName:"p",href:"http://reactivestreams.org"},"Reactive Streams")," by providing conversions from ",(0,i.yg)("inlineCode",{parentName:"p"},"zio.stream.Stream")," to ",(0,i.yg)("inlineCode",{parentName:"p"},"org.reactivestreams.Publisher"),"\nand from ",(0,i.yg)("inlineCode",{parentName:"p"},"zio.stream.Sink")," to ",(0,i.yg)("inlineCode",{parentName:"p"},"org.reactivestreams.Subscriber")," and vice versa. Simply import ",(0,i.yg)("inlineCode",{parentName:"p"},"import zio.interop.reactivestreams._")," to make the\nconversions available."),(0,i.yg)("h2",{id:"examples"},"Examples"),(0,i.yg)("p",null,"First, let's get a few imports out of the way."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"import org.reactivestreams.example.unicast._\nimport zio._\nimport zio.interop.reactivestreams._\nimport zio.stream._\n\nval runtime = Runtime.default\n")),(0,i.yg)("p",null,"We use the following ",(0,i.yg)("inlineCode",{parentName:"p"},"Publisher")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"Subscriber")," for the examples: "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},'val publisher = new RangePublisher(3, 10)\nval subscriber = new SyncSubscriber[Int] {\n  override protected def whenNext(v: Int): Boolean = {\n    print(s"$v, ")\n    true\n  }\n}\n')),(0,i.yg)("h3",{id:"publisher-to-stream"},"Publisher to Stream"),(0,i.yg)("p",null,"A ",(0,i.yg)("inlineCode",{parentName:"p"},"Publisher")," used as a ",(0,i.yg)("inlineCode",{parentName:"p"},"Stream")," buffers up to ",(0,i.yg)("inlineCode",{parentName:"p"},"qSize")," elements. If possible, ",(0,i.yg)("inlineCode",{parentName:"p"},"qSize")," should be\na power of two for best performance. The default is 16."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"val streamFromPublisher = publisher.toStream(qSize = 16)\nruntime.unsafeRun(\n  streamFromPublisher.run(Sink.collectAll[Integer])\n)\n")),(0,i.yg)("h3",{id:"subscriber-to-sink"},"Subscriber to Sink"),(0,i.yg)("p",null,"When running a ",(0,i.yg)("inlineCode",{parentName:"p"},"Stream")," to a ",(0,i.yg)("inlineCode",{parentName:"p"},"Subscriber"),", a side channel is needed for signalling failures.\nFor this reason ",(0,i.yg)("inlineCode",{parentName:"p"},"toSink")," returns a tuple of ",(0,i.yg)("inlineCode",{parentName:"p"},"Promise")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"Sink"),". The ",(0,i.yg)("inlineCode",{parentName:"p"},"Promise")," must be failed\non ",(0,i.yg)("inlineCode",{parentName:"p"},"Stream")," failure. The type parameter on ",(0,i.yg)("inlineCode",{parentName:"p"},"toSink")," is the error type of ",(0,i.yg)("em",{parentName:"p"},"the Stream"),". "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},'val asSink = subscriber.toSink[Throwable]\nval failingStream = Stream.range(3, 13) ++ Stream.fail(new RuntimeException("boom!"))\nruntime.unsafeRun(\n  asSink.flatMap { case (errorP, sink) =>\n    failingStream.run(sink).catchAll(errorP.fail)\n  }\n)\n')),(0,i.yg)("h3",{id:"stream-to-publisher"},"Stream to Publisher"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"val stream = Stream.range(3, 13)\nruntime.unsafeRun(\n  stream.toPublisher.flatMap { publisher =>\n    UIO(publisher.subscribe(subscriber))\n  }\n)\n")),(0,i.yg)("h3",{id:"sink-to-subscriber"},"Sink to Subscriber"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"toSubscriber")," returns a ",(0,i.yg)("inlineCode",{parentName:"p"},"Subscriber")," and an ",(0,i.yg)("inlineCode",{parentName:"p"},"IO")," which completes with the result of running the\n",(0,i.yg)("inlineCode",{parentName:"p"},"Sink")," or the error if the ",(0,i.yg)("inlineCode",{parentName:"p"},"Publisher")," fails.\nA ",(0,i.yg)("inlineCode",{parentName:"p"},"Sink")," used as a ",(0,i.yg)("inlineCode",{parentName:"p"},"Subscriber")," buffers up to ",(0,i.yg)("inlineCode",{parentName:"p"},"qSize")," elements. If possible, ",(0,i.yg)("inlineCode",{parentName:"p"},"qSize")," should be\na power of two for best performance. The default is 16."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-scala"},"val sink = Sink.collectAll[Integer]\nruntime.unsafeRun(\n  sink.toSubscriber(qSize = 16).flatMap { case (subscriber, result) => \n    UIO(publisher.subscribe(subscriber)) *> result\n  }\n)\n")))}m.isMDXComponent=!0}}]);