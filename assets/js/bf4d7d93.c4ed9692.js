"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[43786],{15680:(e,r,n)=>{n.d(r,{xA:()=>p,yg:()=>f});var a=n(96540);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,a,t=function(e,r){if(null==e)return{};var n,a,t={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=a.createContext({}),s=function(e){var r=a.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},p=function(e){var r=s(e.components);return a.createElement(c.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),y=t,f=d["".concat(c,".").concat(y)]||d[y]||u[y]||l;return n?a.createElement(f,o(o({ref:r},p),{},{components:n})):a.createElement(f,o({ref:r},p))}));function f(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var l=n.length,o=new Array(l);o[0]=y;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[d]="string"==typeof e?e:t,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},3233:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(58168),t=(n(96540),n(15680));const l={id:"overview_handling_errors",title:"Handling Errors"},o=void 0,i={unversionedId:"overview/overview_handling_errors",id:"version-1.0.18/overview/overview_handling_errors",title:"Handling Errors",description:"This section looks at some of the common ways to detect and respond to failure.",source:"@site/versioned_docs/version-1.0.18/overview/handling_errors.md",sourceDirName:"overview",slug:"/overview/overview_handling_errors",permalink:"/1.0.18/overview/overview_handling_errors",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/overview/handling_errors.md",tags:[],version:"1.0.18",frontMatter:{id:"overview_handling_errors",title:"Handling Errors"},sidebar:"overview_sidebar",previous:{title:"Basic Operations",permalink:"/1.0.18/overview/overview_basic_operations"},next:{title:"Handling Resources",permalink:"/1.0.18/overview/overview_handling_resources"}},c={},s=[{value:"Either",id:"either",level:2},{value:"Catching All Errors",id:"catching-all-errors",level:2},{value:"Catching Some Errors",id:"catching-some-errors",level:2},{value:"Fallback",id:"fallback",level:2},{value:"Folding",id:"folding",level:2},{value:"Retrying",id:"retrying",level:2},{value:"Next Steps",id:"next-steps",level:2}],p={toc:s},d="wrapper";function u(e){let{components:r,...n}=e;return(0,t.yg)(d,(0,a.A)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"This section looks at some of the common ways to detect and respond to failure."),(0,t.yg)("h2",{id:"either"},"Either"),(0,t.yg)("p",null,"You can surface failures with ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO#either"),", which takes an ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO[R, E, A]")," and produces an ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO[R, Nothing, Either[E, A]]"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'val zeither: UIO[Either[String, Int]] = \n  IO.fail("Uh oh!").either\n')),(0,t.yg)("p",null,"You can submerge failures with ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO.absolve"),", which is the opposite of ",(0,t.yg)("inlineCode",{parentName:"p"},"either")," and turns an ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO[R, Nothing, Either[E, A]]")," into a ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO[R, E, A]"),":"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'def sqrt(io: UIO[Double]): IO[String, Double] =\n  ZIO.absolve(\n    io.map(value =>\n      if (value < 0.0) Left("Value must be >= 0.0")\n      else Right(Math.sqrt(value))\n    )\n  )\n')),(0,t.yg)("h2",{id:"catching-all-errors"},"Catching All Errors"),(0,t.yg)("p",null,"If you want to catch and recover from all types of errors and effectfully attempt recovery, you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"catchAll")," method:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'val z: IO[IOException, Array[Byte]] = \n  openFile("primary.json").catchAll(_ => \n    openFile("backup.json"))\n')),(0,t.yg)("p",null,"In the callback passed to ",(0,t.yg)("inlineCode",{parentName:"p"},"catchAll"),", you may return an effect with a different error type (or perhaps ",(0,t.yg)("inlineCode",{parentName:"p"},"Nothing"),"), which will be reflected in the type of effect returned by ",(0,t.yg)("inlineCode",{parentName:"p"},"catchAll"),"."),(0,t.yg)("h2",{id:"catching-some-errors"},"Catching Some Errors"),(0,t.yg)("p",null,"If you want to catch and recover from only some types of exceptions and effectfully attempt recovery, you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"catchSome")," method:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'val data: IO[IOException, Array[Byte]] = \n  openFile("primary.data").catchSome {\n    case _ : FileNotFoundException => \n      openFile("backup.data")\n  }\n')),(0,t.yg)("p",null,"Unlike ",(0,t.yg)("inlineCode",{parentName:"p"},"catchAll"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"catchSome")," cannot reduce or eliminate the error type, although it can widen the error type to a broader class of errors."),(0,t.yg)("h2",{id:"fallback"},"Fallback"),(0,t.yg)("p",null,"You can try one effect, or, if it fails, try another effect, with the ",(0,t.yg)("inlineCode",{parentName:"p"},"orElse")," combinator:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'val primaryOrBackupData: IO[IOException, Array[Byte]] = \n  openFile("primary.data").orElse(openFile("backup.data"))\n')),(0,t.yg)("h2",{id:"folding"},"Folding"),(0,t.yg)("p",null,"Scala's ",(0,t.yg)("inlineCode",{parentName:"p"},"Option")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"Either")," data types have ",(0,t.yg)("inlineCode",{parentName:"p"},"fold"),", which let you handle both failure and success at the same time. In a similar fashion, ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO")," effects also have several methods that allow you to handle both failure and success."),(0,t.yg)("p",null,"The first fold method, ",(0,t.yg)("inlineCode",{parentName:"p"},"fold"),", lets you non-effectfully handle both failure and success, by supplying a non-effectful handler for each case:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'lazy val DefaultData: Array[Byte] = Array(0, 0)\n\nval primaryOrDefaultData: UIO[Array[Byte]] = \n  openFile("primary.data").fold(\n    _    => DefaultData,\n    data => data)\n')),(0,t.yg)("p",null,"The second fold method, ",(0,t.yg)("inlineCode",{parentName:"p"},"foldM"),", lets you effectfully handle both failure and success, by supplying an effectful (but still pure) handler for each case:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'val primaryOrSecondaryData: IO[IOException, Array[Byte]] = \n  openFile("primary.data").foldM(\n    _    => openFile("secondary.data"),\n    data => ZIO.succeed(data))\n')),(0,t.yg)("p",null,"Nearly all error handling methods are defined in terms of ",(0,t.yg)("inlineCode",{parentName:"p"},"foldM"),", because it is both powerful and fast."),(0,t.yg)("p",null,"In the following example, ",(0,t.yg)("inlineCode",{parentName:"p"},"foldM")," is used to handle both failure and success of the ",(0,t.yg)("inlineCode",{parentName:"p"},"readUrls")," method:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'val urls: UIO[Content] =\n  readUrls("urls.json").foldM(\n    error   => IO.succeed(NoContent(error)), \n    success => fetchContent(success)\n  )\n')),(0,t.yg)("h2",{id:"retrying"},"Retrying"),(0,t.yg)("p",null,"There are a number of useful methods on the ZIO data type for retrying failed effects. "),(0,t.yg)("p",null,"The most basic of these is ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO#retry"),", which takes a ",(0,t.yg)("inlineCode",{parentName:"p"},"Schedule")," and returns a new effect that will retry the first effect if it fails, according to the specified policy:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'import zio.clock._\n\nval retriedOpenFile: ZIO[Clock, IOException, Array[Byte]] = \n  openFile("primary.data").retry(Schedule.recurs(5))\n')),(0,t.yg)("p",null,"The next most powerful function is ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO#retryOrElse"),", which allows specification of a fallback to use, if the effect does not succeed with the specified policy:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-scala"},'  openFile("primary.data").retryOrElse(\n    Schedule.recurs(5), \n    (_, _) => ZIO.succeed(DefaultData))\n')),(0,t.yg)("p",null,"The final method, ",(0,t.yg)("inlineCode",{parentName:"p"},"ZIO#retryOrElseEither"),", allows returning a different type for the fallback."),(0,t.yg)("p",null,"For more information on how to build schedules, see the documentation on ",(0,t.yg)("a",{parentName:"p",href:"/1.0.18/reference/misc/schedule"},"Schedule"),"."),(0,t.yg)("h2",{id:"next-steps"},"Next Steps"),(0,t.yg)("p",null,"If you are comfortable with basic error handling, then the next step is to learn about safe ",(0,t.yg)("a",{parentName:"p",href:"/1.0.18/overview/overview_handling_resources"},"resource handling"),"."))}u.isMDXComponent=!0}}]);