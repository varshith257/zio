"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[67],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>m});var i=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},u=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,m=c["".concat(s,".").concat(d)]||c[d]||g[d]||o;return a?i.createElement(m,n(n({ref:t},u),{},{components:a})):i.createElement(m,n({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,n=new Array(o);n[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,n[1]=l;for(var p=2;p<o;p++)n[p]=a[p];return i.createElement.apply(null,n)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},65831:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>n,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var i=a(58168),r=(a(96540),a(15680));const o={id:"index",title:"Introduction to ZIO Quill",sidebar_label:"ZIO Quill"},n=void 0,l={unversionedId:"zio-quill/index",id:"zio-quill/index",title:"Introduction to ZIO Quill",description:"Quill provides a Quoted Domain Specific Language (QDSL) to express queries in Scala and execute them in a target language.",source:"@site/docs/zio-quill/index.md",sourceDirName:"zio-quill",slug:"/zio-quill/",permalink:"/zio-quill/",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-quill/index.md",tags:[],version:"current",frontMatter:{id:"index",title:"Introduction to ZIO Quill",sidebar_label:"ZIO Quill"},sidebar:"ecosystem-sidebar",previous:{title:"Running Queries",permalink:"/zio-query/running-queries"},next:{title:"Getting Started",permalink:"/zio-quill/getting-started"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Example",id:"example",level:2}],u={toc:p},c="wrapper";function g(e){let{components:t,...a}=e;return(0,r.yg)(c,(0,i.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Quill provides a Quoted Domain Specific Language (",(0,r.yg)("a",{parentName:"p",href:"https://homepages.inf.ed.ac.uk/wadler/papers/qdsl/qdsl.pdf"},"QDSL"),") to express queries in Scala and execute them in a target language. "),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/zio/zio/wiki/Project-Stages"},(0,r.yg)("img",{parentName:"a",src:"https://img.shields.io/badge/Project%20Stage-Production%20Ready-brightgreen.svg",alt:"Production Ready"}))," ",(0,r.yg)("img",{parentName:"p",src:"https://github.com/zio/zio-quill/workflows/CI/badge.svg",alt:"CI Badge"})," ",(0,r.yg)("a",{parentName:"p",href:"https://oss.sonatype.org/content/repositories/releases/io/getquill/quill-core_2.12/"},(0,r.yg)("img",{parentName:"a",src:"https://img.shields.io/nexus/r/https/oss.sonatype.org/io.getquill/quill-core_2.12.svg?label=Sonatype%20Release",alt:"Sonatype Releases"}))," ",(0,r.yg)("a",{parentName:"p",href:"https://oss.sonatype.org/content/repositories/snapshots/io/getquill/quill-core_2.12/"},(0,r.yg)("img",{parentName:"a",src:"https://img.shields.io/nexus/s/https/oss.sonatype.org/io.getquill/quill-core_2.12.svg?label=Sonatype%20Snapshot",alt:"Sonatype Snapshots"}))," ",(0,r.yg)("a",{parentName:"p",href:"https://javadoc.io/doc/io.getquill/zio-quill-docs_2.12"},(0,r.yg)("img",{parentName:"a",src:"https://javadoc.io/badge2/io.getquill/zio-quill-docs_2.12/javadoc.svg",alt:"javadoc"}))," ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/zio/zio-quill"},(0,r.yg)("img",{parentName:"a",src:"https://img.shields.io/github/stars/zio/zio-quill?style=social",alt:"ZIO Quill"}))),(0,r.yg)("h2",{id:"introduction"},"Introduction"),(0,r.yg)("p",null,"The library's core is designed to support multiple target languages, currently featuring specializations for Structured Query Language (",(0,r.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SQL"},"SQL"),") and Cassandra Query Language (",(0,r.yg)("a",{parentName:"p",href:"https://cassandra.apache.org/doc/latest/cql/"},"CQL"),")."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Boilerplate-free mapping"),": The database schema is mapped using simple case classes."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Quoted DSL"),": Queries are defined inside a ",(0,r.yg)("inlineCode",{parentName:"li"},"quote")," block. Quill parses each quoted block of code (quotation) at compile time and translates them to an internal Abstract Syntax Tree (AST)"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Compile-time query generation"),": The ",(0,r.yg)("inlineCode",{parentName:"li"},"ctx.run")," call reads the quotation's AST and translates it to the target language at compile time, emitting the query string as a compilation message. As the query string is known at compile time, the runtime overhead is very low and similar to using the database driver directly."),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Compile-time query validation"),": If configured, the query is verified against the database at compile time and the compilation fails if it is not valid. The query validation ",(0,r.yg)("strong",{parentName:"li"},"does not")," alter the database state.")),(0,r.yg)("blockquote",null,(0,r.yg)("h3",{parentName:"blockquote",id:"scala-3-support"},"Scala 3 Support"),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("a",{parentName:"p",href:"https://github.com/zio/zio-protoquill"},"ProtoQuill")," provides Scala 3 support for Quill rebuilding on top of new metaprogramming capabilities from the ground > up! It is published to maven-central as the ",(0,r.yg)("inlineCode",{parentName:"p"},"quill-<module>_3")," line of artifacts.")),(0,r.yg)("blockquote",null,(0,r.yg)("h3",{parentName:"blockquote",id:"doobie-support"},"Doobie Support"),(0,r.yg)("p",{parentName:"blockquote"},"See ",(0,r.yg)("a",{parentName:"p",href:"/zio-quill/contexts#quill-doobie"},"here")," for Doobie integration instructions.")),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://raw.githubusercontent.com/getquill/quill/master/example.gif",alt:"example"})),(0,r.yg)("p",null,"Note: The GIF example uses Eclipse, which shows compilation messages to the user."))}g.isMDXComponent=!0}}]);