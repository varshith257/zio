"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[74264],{15680:(e,n,r)=>{r.d(n,{xA:()=>f,yg:()=>m});var t=r(96540);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},f=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},s=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),u=c(r),s=o,m=u["".concat(p,".").concat(s)]||u[s]||y[s]||a;return r?t.createElement(m,i(i({ref:n},f),{},{components:r})):t.createElement(m,i({ref:n},f))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=s;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}s.displayName="MDXCreateElement"},74022:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(58168),o=(r(96540),r(15680));const a={id:"zrefm",title:"ZRefM"},i=void 0,l={unversionedId:"reference/concurrency/zrefm",id:"version-1.0.18/reference/concurrency/zrefm",title:"ZRefM",description:"A ZRefM[RA, RB, EA, EB, A, B] is a polymorphic, purely functional description of a mutable reference.",source:"@site/versioned_docs/version-1.0.18/reference/concurrency/zrefm.md",sourceDirName:"reference/concurrency",slug:"/reference/concurrency/zrefm",permalink:"/1.0.18/reference/concurrency/zrefm",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/reference/concurrency/zrefm.md",tags:[],version:"1.0.18",frontMatter:{id:"zrefm",title:"ZRefM"},sidebar:"overview_sidebar",previous:{title:"Ref",permalink:"/1.0.18/reference/concurrency/ref"},next:{title:"RefM",permalink:"/1.0.18/reference/concurrency/refm"}},p={},c=[],f={toc:c},u="wrapper";function y(e){let{components:n,...r}=e;return(0,o.yg)(u,(0,t.A)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"A ",(0,o.yg)("inlineCode",{parentName:"p"},"ZRefM[RA, RB, EA, EB, A, B]")," is a polymorphic, purely functional description of a mutable reference. "),(0,o.yg)("p",null,"The fundamental operations of a ",(0,o.yg)("inlineCode",{parentName:"p"},"ZRefM"),"are ",(0,o.yg)("inlineCode",{parentName:"p"},"set")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"get"),". "),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"strong"},"set"))," takes a value of type ",(0,o.yg)("inlineCode",{parentName:"li"},"A")," and sets the reference to a new value, requiring an environment of type ",(0,o.yg)("inlineCode",{parentName:"li"},"RA")," and potentially failing with an error of type ",(0,o.yg)("inlineCode",{parentName:"li"},"EA"),". "),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"strong"},"get"))," gets the current value of the reference and returns a value of type ",(0,o.yg)("inlineCode",{parentName:"li"},"B"),", requiring an environment of type\n",(0,o.yg)("inlineCode",{parentName:"li"},"RB")," and potentially failing with an error of type ",(0,o.yg)("inlineCode",{parentName:"li"},"EB"),".")),(0,o.yg)("p",null,"When the error and value types of the ",(0,o.yg)("inlineCode",{parentName:"p"},"ZRefM")," are unified, that is, it is a ",(0,o.yg)("inlineCode",{parentName:"p"},"ZRefM[E, E, A, A]"),", the ",(0,o.yg)("inlineCode",{parentName:"p"},"ZRefM")," also supports atomic ",(0,o.yg)("inlineCode",{parentName:"p"},"modify")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"update")," operations."),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("em",{parentName:"p"},(0,o.yg)("strong",{parentName:"em"},"Note:"))),(0,o.yg)("p",{parentName:"blockquote"},"Unlike ",(0,o.yg)("inlineCode",{parentName:"p"},"ZRef"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"ZRefM")," allows performing effects within update operations, at some cost to performance. Writes will semantically block other writers, while multiple readers can read simultaneously.")))}y.isMDXComponent=!0}}]);